// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(60)
  email       String
  password    String
  profile     Profile?
  thread      Thread[]
}

model Profile {
  id          Int   @id @default(autoincrement())
  bio         String?
  user        User  @relation(fields: [userId], references: [id])
  userId      Int   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Thread {
  id          Int   @id @default(autoincrement())
  question    Question?
  answer      Answer?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User    @relation(fields: [userId], references: [id])
}

model Question {
  id          Int   @id @default(autoincrement())
  text        String @db.LongText
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  thread      Thread   @relation(fields: [threadId], references: [id])
  threadId    Int   @unique
}

model Answer {
  id          Int   @id @default(autoincrement())
  text        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  thread      Thread   @relation(fields: [threadId], references: [id])
  threadId    Int   @unique
}
